curl http://localhost:8088/health

curl -s -X POST http://localhost:8088/v1/chat \
  -H "Content-Type: application/json" \
  -d '{"messages":[{"role":"user","content":"‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ 3 ‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡πÄ‡∏Ñ‡∏ß‡∏™‡πÉ‡∏´‡∏°‡πà"}]}'


curl -s -X POST http://localhost:8088/v1/vision \
  -F "prompt=‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" \
  -F "image=@/path/to/image.jpg;type=image/jpeg"


// ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
await fetch('http://localhost:8088/v1/chat', { ... })

// ‡∏†‡∏≤‡∏û
await fetch('http://localhost:8088/v1/vision', { ... })



---

‚ú® ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ **ValCortex** ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô ‚Äú‡∏™‡∏°‡∏≠‡∏á‡∏Ç‡∏≠‡∏á PixelVal/Game8‚Äù ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ  

‡πÉ‡∏´‡πâ‡∏ú‡∏°‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏•‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏ä‡πà‡∏ô **‡πÄ‡∏û‡∏¥‡πà‡∏° endpoint `/v1/action`** ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ AI ‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏° ‚Äútask ‡∏Ç‡∏≠‡∏á player‚Äù (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏î‡∏¥‡∏ô, ‡∏Ñ‡∏∏‡∏¢, ‡∏´‡∏≤‡∏Ç‡∏≠‡∏á) ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô action JSON ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏°‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢?


cd E:\08-04-2023-HOSTSHARE\htm_go\ValCortex
docker compose up -d --build

docker compose ps

curl http://localhost:8088/health

‡∏ó‡∏î‡∏™‡∏≠‡∏ö text chat:

curl -s -X POST http://localhost:8088/v1/chat ^
  -H "Content-Type: application/json" ^
  -d "{\"messages\":[{\"role\":\"user\",\"content\":\"‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏à‡∏≤‡∏Å Game8\"}]}"


‡∏ó‡∏î‡∏™‡∏≠‡∏ö vision (‡∏†‡∏≤‡∏û):

curl -s -X POST http://localhost:8088/v1/vision ^
  -F "prompt=‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ" ^
  -F "image=@E:\path\to\image.jpg;type=image/jpeg"


5. Integration ‡∏Å‡∏±‡∏ö Game8

‡πÉ‡∏ô JS ‡∏î‡∏∂‡∏á API ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢:

const res = await fetch('http://localhost:8088/v1/chat', {
  method: 'POST',
  headers: {'Content-Type':'application/json'},
  body: JSON.stringify({ messages: [{role:'user', content: "NPC ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£"}] })
});
const data = await res.json();
console.log(data.response.message.content);


üí° ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏• gpt-oss:20b ‡πÅ‡∏•‡∏∞ llama3.2-vision:11b
Ollama ‡∏à‡∏∞ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏•‡∏á volume ollama: (‡∏≠‡∏≤‡∏à‡∏Å‡∏¥‡∏ô‡πÄ‡∏ß‡∏•‡∏≤/‡πÄ‡∏ô‡πá‡∏ï‡∏û‡∏≠‡∏™‡∏°‡∏Ñ‡∏ß‡∏£)

‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏ú‡∏°‡∏ó‡∏≥ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå .bat (Windows) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô ValCortex ‡πÅ‡∏ö‡∏ö one-click ‡πÄ‡∏•‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?

cd E:\08-04-2023-HOSTSHARE\htm_go\ValCortex
docker compose down
docker compose up -d --build
curl http://localhost:8088/health


wget "https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe" -OutFile "G:\ai\Miniconda3-latest-Windows-x86_64.exe"

$c=@("$env:USERPROFILE\miniconda3","C:\ProgramData\Miniconda3","$env:USERPROFILE\anaconda3","C:\ProgramData\Anaconda3");foreach($p in $c){if(Test-Path "$p\condabin\conda.bat"){ $env:Path="$env:Path;$p\condabin"; & "$p\condabin\conda.bat" init powershell | Out-Null; & "$p\condabin\conda.bat" init cmd.exe | Out-Null; Write-Host "Initialized from $p"; break }}

conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main
conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r
conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/msys2

conda create -n valcortex -c conda-forge python=3.10 -y


